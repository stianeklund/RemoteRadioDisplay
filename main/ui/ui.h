// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.4.1
// LVGL version: 8.3.6
// Project name: Sunton_SquareLine_Project

#ifndef _SUNTON_SQUARELINE_PROJECT_UI_H
#define _SUNTON_SQUARELINE_PROJECT_UI_H

#ifdef __cplusplus
extern "C" {
#endif

#include "lvgl.h"
#include "ui_helpers.h"
#include "ui_events.h"
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "freertos/queue.h"


// SCREEN: ui_Screen1
void ui_Screen1_screen_init(void);
extern lv_obj_t * ui_Screen1;
extern lv_obj_t * ui_SignalPanel;
extern lv_obj_t * ui_SMeterBar;
extern lv_obj_t * ui_SMeterLabel;
void ui_event_Switch1(lv_event_t * e);
extern lv_obj_t * ui_Switch1;
extern lv_obj_t * ui_SwrMeterLabel;
extern lv_obj_t * ui_SwrMeterBar;
extern lv_obj_t * ui_SwrTextLabel;
extern lv_obj_t * ui_SignalStrengthLabel;
extern lv_obj_t * ui_AlcMeterBar;
extern lv_obj_t * ui_ALC;
extern lv_obj_t * ui_AfGainBar;
extern lv_obj_t * ui_AfGainLabel;
extern lv_obj_t * ui_RfGainLabel;
extern lv_obj_t * ui_RfGainBar;
extern lv_obj_t * ui_VfoAValue;
void ui_event_ModeDropDown(lv_event_t * e);
extern lv_obj_t * ui_ModeDropDown;
extern lv_obj_t * ui_VfoBValue;
extern lv_obj_t * ui_VfoAButtonBackground;
extern lv_obj_t * ui_VfoALabel;
extern lv_obj_t * ui_VfoBButtonBackground;
extern lv_obj_t * ui_VfoBLabel;
void ui_event_AntButton(lv_event_t * e);
extern lv_obj_t * ui_AntButton;
extern lv_obj_t * ui_Ant1Label;
extern lv_obj_t * ui_Ant2Label;
void ui_event_UtcTime(lv_event_t * e);
extern lv_obj_t * ui_UtcTime;
extern lv_obj_t * ui_PwrLabel;
extern lv_obj_t * ui_PwrValueLabel;
void ui_event_IfFilter(lv_event_t * e);
extern lv_obj_t * ui_IfFilter;
extern lv_obj_t * ui_IfFilterALabel;
extern lv_obj_t * ui_IfFilterBLabel;
void ui_event_RxTxLabel(lv_event_t * e);
extern lv_obj_t * ui_RxTxLabel;
void ui_event_PreAmpButton(lv_event_t * e);
extern lv_obj_t * ui_PreAmpButton;
extern lv_obj_t * ui_PreAmpButtonLabel;
void ui_event_AttButton(lv_event_t * e);
extern lv_obj_t * ui_AttButton;
extern lv_obj_t * ui_AttButtonLabel;
void ui_event_AtTuneButton(lv_event_t * e);
extern lv_obj_t * ui_AtTuneButton;
extern lv_obj_t * ui_AtTuneButtonLabel;
void ui_event_ProcButton(lv_event_t * e);
extern lv_obj_t * ui_ProcButton;
extern lv_obj_t * ui_ProcButtonLabel;
void ui_event_IncreaseSwrButton(lv_event_t * e);
extern lv_obj_t * ui_IncreaseSwrButton;
void ui_event_IncreaseSwrLabel(lv_event_t * e);
extern lv_obj_t * ui_IncreaseSwrLabel;
void ui_event_DecreaseSwrButton(lv_event_t * e);
extern lv_obj_t * ui_DecreaseSwrButton;
extern lv_obj_t * ui_DecreaseSwrLabel;
void ui_event_IncreaseSMeterButton(lv_event_t * e);
extern lv_obj_t * ui_IncreaseSMeterButton;
extern lv_obj_t * ui_IncreaseSMeterLabel;
void ui_event_DecreaseSMeterButton(lv_event_t * e);
extern lv_obj_t * ui_DecreaseSMeterButton;
extern lv_obj_t * ui_DecreaseSMeterLabel;
void ui_event_SplitButton(lv_event_t * e);
extern lv_obj_t * ui_SplitButton;
extern lv_obj_t * ui_SplitButtonLabel;
void ui_event_NrButton(lv_event_t * e);
extern lv_obj_t * ui_NrButton;
extern lv_obj_t * ui_NrButtonLabel;
extern lv_obj_t * ui_AgcLabel;
extern lv_obj_t * ui_RitLabel;
extern lv_obj_t * ui_RitValue;
extern lv_obj_t * ui_XitLabel;
extern lv_obj_t * ui_RitValue1;
extern lv_obj_t * ui_PwrSwitch;
extern lv_obj_t * ui_OnOffLabel;
void ui_event_NbButton(lv_event_t * e);
extern lv_obj_t * ui_NbButton;
extern lv_obj_t * ui_NbButtonLabel;
void ui_event_DebugMode(lv_event_t * e);
extern lv_obj_t * ui_DebugMode;
extern lv_obj_t * ui_DebugModeButtonLabel;
// SCREEN: ui_Screen2
void ui_Screen2_screen_init(void);
extern lv_obj_t * ui_Screen2;
extern lv_obj_t * ui_TextArea1;
extern lv_obj_t * ui_DebugLabel;
void ui_event_ReturnToScreen1Button(lv_event_t * e);
extern lv_obj_t * ui_ReturnToScreen1Button;
extern lv_obj_t * ui_ReturnToScreen1BtnLabel;
extern lv_obj_t * ui____initial_actions0;





LV_FONT_DECLARE(ui_font_Font16);
LV_FONT_DECLARE(ui_font_Font18);
LV_FONT_DECLARE(ui_font_Font30);
LV_FONT_DECLARE(ui_font_Font48);
LV_FONT_DECLARE(ui_font_Frequency);
LV_FONT_DECLARE(ui_font_MeterFont);
LV_FONT_DECLARE(ui_font_UTCTime);



// void ui_init(void);
void ui_init();

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
